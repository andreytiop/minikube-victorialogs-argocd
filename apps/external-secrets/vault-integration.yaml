# Этот секрет содержит токен для доступа к Vault.
# Его нужно создать вручную в кластере.
# В реальном окружении используйте Vault Kubernetes Auth Method.
apiVersion: v1
kind: Secret
metadata:
  name: vault-token
  namespace: external-secrets # В том же неймспейсе, где будет SecretStore
type: Opaque
stringData:
  token: "root" # <-- ВАЖНО: Замените на ваш Root Token

---
# SecretStore указывает ESO, как подключиться к Vault
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: victoria-logs # Создаем в неймспейсе, где понадобится секрет
spec:
  provider:
    vault:
      server: "http://vault.vault.svc.cluster.local:8200" # Адрес Vault внутри кластера
      path: "kv" # Путь к вашему KV-хранилищу
      version: "v2"
      auth:
        # Для демо используем токен.
        tokenSecretRef:
          name: "vault-token" # Название секрета с токеном
          key: "token"
          namespace: "external-secrets" # Указываем, где лежит секрет с токеном

---
# ExternalSecret описывает, какой секрет из Vault нужно синхронизировать
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: victorialogs-dummy-secret
  namespace: victoria-logs # В каком неймспейсе создать Kubernetes Secret
spec:
  refreshInterval: "15s"
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: victorialogs-dummy-secret-from-vault # Имя создаваемого Kubernetes Secret
    creationPolicy: Owner
  data:
  - secretKey: my-secret-key # Ключ в итоговом Kubernetes Secret
    remoteRef:
      key: kv/apps/victorialogs # Путь к секрету в Vault
      property: dummy-key # Свойство внутри секрета в Vault

